{"ast":null,"code":"var _jsxFileName = \"/home/sorelle/Fontend-sale-vehicule/auto-vente/src/components/AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Créer un contexte pour l'authentification\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext); // Utilisation du contexte\n};\n\n// Fournisseur de contexte pour l'authentification\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null); // Utilisateur initialement non connecté\n\n  const login = async credentials => {\n    // Simuler une réponse d'authentification\n    const mockUserData = {\n      email: credentials.email,\n      role: 'admin' // Exemple : rôle administrateur\n    };\n\n    // Mettre à jour l'état de l'utilisateur après la connexion\n    setUser(mockUserData);\n    return mockUserData;\n  };\n  const logout = () => {\n    setUser(null); // Déconnecter l'utilisateur\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","login","credentials","mockUserData","email","role","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sorelle/Fontend-sale-vehicule/auto-vente/src/components/AuthProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Créer un contexte pour l'authentification\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext); // Utilisation du contexte\n};\n\n// Fournisseur de contexte pour l'authentification\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // Utilisateur initialement non connecté\n\n  const login = async (credentials) => {\n    // Simuler une réponse d'authentification\n    const mockUserData = {\n      email: credentials.email,\n      role: 'admin',  // Exemple : rôle administrateur\n    };\n    \n    // Mettre à jour l'état de l'utilisateur après la connexion\n    setUser(mockUserData);\n\n    return mockUserData;\n  };\n\n  const logout = () => {\n    setUser(null); // Déconnecter l'utilisateur\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,OAAON,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC;AAClC,CAAC;;AAED;AAAAE,EAAA,CAJaD,OAAO;AAKpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC,MAAMW,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC;IACA,MAAMC,YAAY,GAAG;MACnBC,KAAK,EAAEF,WAAW,CAACE,KAAK;MACxBC,IAAI,EAAE,OAAO,CAAG;IAClB,CAAC;;IAED;IACAL,OAAO,CAACG,YAAY,CAAC;IAErB,OAAOA,YAAY;EACrB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBN,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAET,IAAI;MAAEE,KAAK;MAAEK;IAAO,CAAE;IAAAT,QAAA,EAClDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACd,GAAA,CAzBWF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}