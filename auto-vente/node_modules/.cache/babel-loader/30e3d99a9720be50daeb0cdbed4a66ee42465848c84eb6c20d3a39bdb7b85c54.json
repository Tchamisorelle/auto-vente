{"ast":null,"code":"var _jsxFileName = \"/home/sorelle/Fontend-sale-vehicule/auto-vente/src/components/AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Créer un contexte pour l'authentification\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook personnalisé pour accéder au contexte\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// AuthProvider pour gérer l'état d'authentification et les données utilisateur\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // Récupérer les données de l'utilisateur depuis le localStorage au chargement\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser)); // Charger l'utilisateur depuis localStorage\n    }\n  }, []);\n\n  // Fonction de login\n  const login = credentials => {\n    // Simuler des utilisateurs avec rôles\n    const simulatedUsers = {\n      admin: {\n        email: 'admin@example.com',\n        password: 'admin123',\n        role: 'admin',\n        name: 'Admin User'\n      },\n      client: {\n        email: 'client@example.com',\n        password: 'client123',\n        role: 'client',\n        name: 'Client User'\n      }\n    };\n\n    // Vérifier les informations d'identification et simuler une connexion\n    const userData = simulatedUsers[credentials.email === 'admin@example.com' ? 'admin' : 'client'];\n    if (userData && userData.password === credentials.password) {\n      localStorage.setItem('user', JSON.stringify(userData)); // Sauvegarder l'utilisateur dans le localStorage\n      setUser(userData); // Mettre à jour l'état utilisateur\n      return userData;\n    }\n    throw new Error('Email ou mot de passe incorrect');\n  };\n\n  // Fonction de logout\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","credentials","simulatedUsers","admin","email","password","role","name","client","userData","setItem","stringify","Error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sorelle/Fontend-sale-vehicule/auto-vente/src/components/AuthProvider.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Créer un contexte pour l'authentification\nconst AuthContext = createContext();\n\n// Hook personnalisé pour accéder au contexte\nexport const useAuth = () => useContext(AuthContext);\n\n// AuthProvider pour gérer l'état d'authentification et les données utilisateur\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  // Récupérer les données de l'utilisateur depuis le localStorage au chargement\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser)); // Charger l'utilisateur depuis localStorage\n    }\n  }, []);\n\n  // Fonction de login\n  const login = (credentials) => {\n    // Simuler des utilisateurs avec rôles\n    const simulatedUsers = {\n      admin: { email: 'admin@example.com', password: 'admin123', role: 'admin', name: 'Admin User' },\n      client: { email: 'client@example.com', password: 'client123', role: 'client', name: 'Client User' },\n    };\n\n    // Vérifier les informations d'identification et simuler une connexion\n    const userData = simulatedUsers[credentials.email === 'admin@example.com' ? 'admin' : 'client'];\n\n    if (userData && userData.password === credentials.password) {\n      localStorage.setItem('user', JSON.stringify(userData)); // Sauvegarder l'utilisateur dans le localStorage\n      setUser(userData); // Mettre à jour l'état utilisateur\n      return userData;\n    }\n\n    throw new Error('Email ou mot de passe incorrect');\n  };\n\n  // Fonction de logout\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,WAAW,CAAC;AAAA;;AAEpD;AAAAE,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAE,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,UAAU,EAAE;MACdD,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,KAAK,GAAIC,WAAW,IAAK;IAC7B;IACA,MAAMC,cAAc,GAAG;MACrBC,KAAK,EAAE;QAAEC,KAAK,EAAE,mBAAmB;QAAEC,QAAQ,EAAE,UAAU;QAAEC,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAa,CAAC;MAC9FC,MAAM,EAAE;QAAEJ,KAAK,EAAE,oBAAoB;QAAEC,QAAQ,EAAE,WAAW;QAAEC,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAc;IACpG,CAAC;;IAED;IACA,MAAME,QAAQ,GAAGP,cAAc,CAACD,WAAW,CAACG,KAAK,KAAK,mBAAmB,GAAG,OAAO,GAAG,QAAQ,CAAC;IAE/F,IAAIK,QAAQ,IAAIA,QAAQ,CAACJ,QAAQ,KAAKJ,WAAW,CAACI,QAAQ,EAAE;MAC1DT,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;MACxDf,OAAO,CAACe,QAAQ,CAAC,CAAC,CAAC;MACnB,OAAOA,QAAQ;IACjB;IAEA,MAAM,IAAIG,KAAK,CAAC,iCAAiC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBjB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;IAC/BpB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,IAAI;MAAEO,KAAK;MAAEa;IAAO,CAAE;IAAAtB,QAAA,EAClDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,GAAA,CA1CWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}